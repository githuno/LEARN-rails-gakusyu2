-# ヘッダー ---------------------------------------------------------------------
%h1.text-center.font-weight-bold.mb-4.border-bottom timeline
.d-flex.align-items-center.gap-2
  - button = user_signed_in? ? 'マイページ' : 'ログイン'
  - path = user_signed_in? ? user_path(current_user) : new_user_session_path
  = link_to button, path, class: 'btn btn-secondary mb-4'
-# Navバー ----------------------------------------------------------------------
.nav.nav-tabs.mb-4
  %li.nav-item
    = link_to '全て', timeline_path,
              class: "nav-link #{'active' if current_action == 'index'}"
  - if user_signed_in?
    %li.nav-item
      = link_to 'フォロー', timeline_followings_path,
                class: "nav-link #{'active' if current_action == 'idx_followings'}"
    %li.nav-item
      = link_to 'いいね', timeline_likes_path,
                class: "nav-link #{'active' if current_action == 'idx_likes'}"
    %li.nav-item
      = link_to '自分', timeline_user_path(current_user),
                class: "nav-link #{'active' if current_action == 'idx_user'}"
-# カード -----------------------------------------------------------------------
.container.d-flex.align-items-center
  .posts.d-flex.flex-row.mx-auto.overflow-auto{
    'data-controller': 'posts',
    'data-my-id': current_user&.id,
    'data-tl-type': current_action
  }
    - @posts.each do |post|
      .posts_card.mr-2.mb-2{ tabindex: 0 }
        .card-body.d-flex.flex-column.justify-content-between
          .top-content
            %p.h5.card-title{
              'data-bs-toggle': 'modal',
              'data-bs-target': '#postModal'
            }
              = post['content']
            %p.card-text
              = post['updated_at'].in_time_zone('Tokyo').strftime('%Y/%m/%d %H:%M')
          .bottom-content
            %hr
            .row
              -# ユーザー名 || 編集
              .col-8
                - if current_user && current_user.id == post['user_id']
                  .bi.bi-pencil-square{
                    'data-bs-toggle': 'modal',
                    'data-controller': 'modal',
                    'data-bs-target': '#editModal',
                    'data-action': 'click->modal#editPost',
                    'data-post-id': post['id'],
                    'data-post-content': post['content'],
                    'data-post-updated-at': post['updated_at'].in_time_zone('Tokyo').strftime('%Y/%m/%d %H:%M'),
                  }
                - else
                  %button.btn.btn-outline-secondary{
                    'data-bs-toggle': 'modal',
                    'data-controller': 'modal',
                    'data-bs-target': '#userModal',
                    'data-action': 'click->modal#showUser',
                    'data-user-id': post['user_id'],
                    'data-my-id': current_user&.id,
                    'data-is-followed': post['following'].to_s,
                    'data-post-id': 'none',
                  }= post['username']
              .col-1
              -# いいね
              .col-1
                - if user_signed_in? && current_user.id != post['user_id']
                  .i{
                    'data-controller': 'like',
                    'data-post-liked': post['liked'],
                    'data-post-id': post['id'],
                    'data-action': 'click->like#toggleLike'
                  }
                    - if post['liked']
                      %heart.bi.bi-heart-fill{style: "color: #A54824;"}
                    - else
                      %heart.bi.bi-heart{style: "color: #A54824;"}
                - else
                  .bi.bi-heart
              -# いいね数
              .col-2{id: "likes-count-#{post['id']}", 
                      'data-bs-toggle': 'modal',
                      'data-bs-target': '#likersModal',
                      'data-controller': 'modal',
                      'data-action': 'click->modal#showLikers',
                      'data-post-id': post['id'],
                      'data-my-id': current_user&.id,
                    }
                = post['likes_count']
              -# %button.btn.mb-4.toggleFollow{
              -#   'data-controller': 'follow',
              -#   'data-user-id': post['user_id'],
              -#   'data-is-followed': post['following'].to_s,
              -#   'data-action': 'click->follow#toggleFollow'
              -# }
              
    .end-of-data.posts_card.border-0
      .card-body.d-flex.flex-row.justify-content-center
        %h5.card-title No more data
-# フッター ---------------------------------------------------------------------
%br
%hr.w-25
.d-flex.justify-content-between.w-25{
  style: 'min-width: 185px;'
}
  - if user_signed_in?
    = link_to 'ログアウト', destroy_user_session_path,
              data: { turbo_method: :delete },
              class: 'btn btn-outline-secondary'
    %button.btn.btn-primary{
      'data-bs-toggle': 'modal',
      'data-bs-target': '#newModal'
    } 新規投稿

-# 投稿詳細モーダル -----------------------------------------------------------------
.modal.fade{ id: 'postModal', tabindex: '-1', 'aria-hidden': 'true' }
  .modal-dialog
    .modal-content
      .modal-header
        %h1.modal-title.fs-5{ id: 'postDetailModalLabel' } 投稿詳細
        %button.btn-close{ 'data-bs-dismiss': 'modal', 'aria-label': 'Close' }
      .modal-body
        %p.h5.card-title{ id: 'postDetailContent' }
        %p.card-text{ id: 'postDetailUpdatedAt' }
-# 新規投稿モーダル -----------------------------------------------------------------
.modal.fade{ id: 'newModal', tabindex: '-1', 'aria-hidden': 'true' }
  .modal-dialog
    .modal-content
      .modal-header
        %h1.modal-title.fs-5{ id: 'postModalLabel' } 新規投稿
        %button.btn-close{ 'data-bs-dismiss': 'modal', 'aria-label': 'Close' }
      .modal-body
        = form_with(model: @post, local: true, class: 'mb-4') do |form|
          = form.text_area :content, class: 'form-control', maxlength: 140
          .actions.mt-3.d-flex.justify-content-end.gap-5
            = form.submit '投稿', class: 'btn btn-primary'
-# 投稿編集モーダル -----------------------------------------------------------------
.modal.fade{ id: 'editModal', tabindex: '-1', 'aria-hidden': 'true' }
  .modal-dialog
    .modal-content
      .modal-header
        %h1.modal-title.fs-5{ id: 'postModalLabel' } 編集
        %button.btn-close{ 'data-bs-dismiss': 'modal', 'aria-label': 'Close' }
      .modal-body
        = form_with(model: @post, local: true, class: 'mb-4') do |form|
          = form.text_area :content, class: 'form-control', maxlength: 140
          %p.updated-at 最終更新日時:
          .actions.mt-3.d-flex.justify-content-end.gap-5
            = link_to '削除', '#',
                      data: { turbo_method: :delete },
                      class: 'btn btn-danger'
            = form.submit '更新', class: 'btn btn-primary'
-# ユーザーモーダル -------------------------------------------------------------
.modal.fade{ id: 'userModal', tabindex: '-1', 'aria-hidden': 'true' }
  .modal-dialog.modal-lg
    .modal-content
      .modal-header
        %h1.modal-title.fs-5.user-name{ id: 'userModalLabel' }
        %button.btn-close{ 'data-bs-dismiss': 'modal', 'aria-label': 'Close' }
      .modal-body
        .container-fluid
          .row.gap-4.user-profile
            .col-3
              %strong プロフィール :
            .col
              %span.profile-content
          .row.gap-4.user-blog-url
            .col-3
              %strong ブログURL :
            .col
              = link_to 'user-blog-url-link', '#', class: 'user-blog-url-link'
          .row.gap-4
            .col-8
            .col
              - if user_signed_in?
                %button.btn.toggleFollow{
                  'data-controller': 'follow',
                  'data-action': 'click->follow#toggleFollow',
                }
-# Likersモーダル -----------------------------------------------------
.modal.fade{ id: 'likersModal', tabindex: '-1', 'aria-hidden': 'true' }
  .modal-dialog
    .modal-content
      .modal-header
        %h1.modal-title.fs-5{ id: 'likersModalLabel' } この投稿にいいねしたユーザー
        %button.btn-close{ 'data-bs-dismiss': 'modal', 'aria-label': 'Close' }
      .modal-body
        %ul{id: 'likersList'}